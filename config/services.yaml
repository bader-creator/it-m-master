# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    session_max_idle_time: 600 // set to whatever value you want in seconds
    avatars_directory: '%kernel.project_dir%/public/uploads/avatars'
    photo_directory: '%kernel.project_dir%/public/uploads/avatars/photos'
    csv_directory: '%kernel.project_dir%/public/uploads/excels'
    firebase_token : AAAA2MJ1B8I:APA91bHeM315KW6pRo79SvogOLWSXawxtjDjRwVF79ejT-3Jf7I5aJUREW32VHhGz50D8fxUfkrW9Ux7sjNdvP_Tg2tSnwLNvU1OzI-tSm-StnQRcgcYIS0t7gpLr1tId4kIRJOtI2o7
    notification_firebase: true
    notification_web: true


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $firebaseToken : '%firebase_token%'
            $notificationFirebase : '%notification_firebase%'
            $notificationWeb : '%notification_web%'
            
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    

    app.reset_pwd:
        alias: fos_user.registration.form.factory
        public: true
    

    # service to send email
    app_send_mailer:
        class: App\Service\Mailer
        arguments:
        - "@mailer"
    
    ## service to disconnect after inactive period
    app.handler.session_idle:
        class: App\Controller\Security\SessionIdleHandler
        arguments: ["@session", "@security.token_storage", "@router", "%session_max_idle_time%"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }